///////////////////////////////////////////////////
//      SHOTGUN FRENZY
//   a mod by Wad'a'Holic

// f_PStat.acs
// player status and respawning
#library "f_PStat"

#import "f_IntDB.acs"
#import "f_Tip.acs"
#import "f_Cred.acs"
#import "fl_Price.acs"
#import "f_PMenP.acs"
#import "fl_techs.acs"
#import "fl_wdir.acs"

#include "zcommon.acs"
#include "samu_tools.ach"

str Stats_PlayerNames[32];

// player dies
script 52 DEATH
{

if (g_Status == 5){
	thing_hate(109, 104, 4);
	thing_hate(110, 104, 4);
	thing_hate(111, 104, 4);
	thing_hate(112, 104, 4);
	thing_hate(113, 104, 4);
	thing_hate(114, 104, 4);
}
else{
	//log(s:"Hating on sector: ", d:g_Status);
	thing_hate(109, 100+g_Status, 4);
	thing_hate(110, 100+g_Status, 4);
	thing_hate(111, 100+g_Status, 4);
	thing_hate(112, 100+g_Status, 4);
	thing_hate(113, 100+g_Status, 4);
	thing_hate(114, 100+g_Status, 4);
}

    // unmorph incase the player is in a tank
    //Unmorphactor(0, 1);
    hudmessage(s:""; 0, 201, 0, 400.0, 0.1, 1.0);
    
    // check tank status
	if(ACS_ExecuteWithResult(781, 0))
		{
			acs_executealways(309, 0); // Oh shit they got me.
		}
	else{
	// [Samu] Here, a saving weapon feature.
		int lastWeapon = Weapon_SaveLastUsed();
		p_LastWeap[playernumber()] = lastWeapon;
	}
    
    // increase death counter
    p_TotalPlayerDeaths ++;
    
    // display message
    if(PlayerCount() < 3){
		   Notify_Player_Death();
          //f_TipShow("DEATH", "", "Has Fallen!", 10);
    }
	
	// a nice pretty message for the loser to make them think on the bright side
	// [Samu] Hm... I got a better idea.
	/*
	sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
	setfont("BCOUNT");
	hudmessage(s:"a"; 2, 180, CR_Gold, 0.1, 0.1, 5.0);
	//setfont("BIGFONT");
	//hudmessage(s:"You've been killed!"; 1, 178, CR_Red, 570.0, 370.1, 5.0);
	setfont("CONFONT");
	hudmessage(s:"You have been killed!\nThe bodycount sits at ", d:getlevelinfo(LEVELINFO_KILLED_MONSTERS), s:" dead monsters!\nTotal player deaths is sitting at ", d:p_TotalPlayerDeaths; 2, 179, CR_Gold, 580.0, 420.1, 1.0);
	*/

}

Script "CheckClientMute" OPEN CLIENTSIDE
{
    RequestScriptPuke(607,0,0,0);
}

Script 607 (void) NET
{
    //Check to see if they need to be muted
    int mutetime = GetCVar("sf_mutetime");
    if (mutetime) {
        str mute = strparam(s:"ignore_idx ", d:playernumber());
        mute = strparam(s:mute, s:" ");
        mute = strparam(s:mute, d:mutetime);
        ConsoleCommand(mute);
    }
}

// player enters game
script 53 ENTER
{
    //Clear potential bugs
    setactorproperty(0, APROP_SPEED, 1.0);
    setactorproperty(0, APROP_Health, 100);
	setactorproperty(0, APROP_DamageFactor, 1.0);
    setplayerproperty(0, 0, PROP_TOTALLYFROZEN);
    ACS_ExecuteAlways(106,0,3,1,1);
    p_MenuSelection_Active[playernumber()] = 0;
    
    
    // give credits and post global tip
    // mmm: bonus from level time

    //t3h: This is too aggressive -- players are speccing / rejoining because
    //     they earn more credits over time than by playing.
    //     So, let's add a "corrective" console variable
    //     This way, if the cvar is unset, we behave as always. But it can be made positive, to increase the rate, or negative, to decrease the rate.

    //t3h: Trying again. Just adding the cvar wasn't enough. Now, just don't give money unless they're really new (no frags)
    //     Also, there's a bug where sometimes players don't start at rank 0.

    // clear any previous items
	TakeInventory("PlayerKilledDemon", 0xFFFFFFF);
	TakeInventory("P_Backpack", 0xFFFFFFF);
	// Just in case
	//ACS_ExecuteAlways("PersonalBP_Reset", 0);
    clearinventory();

    // give the player his/her boomstick and beretta
    giveinventory("Beretta", 1);
    giveinventory("Boomstick", 1);
    setweapon("Boomstick");

    int creditmult = GetCVar("sf_creditcorrection");
	int StartCashCvar = GetCVar("sf_startcash");
    p_Credits[playernumber()] = f_Startcash + (10 + creditmult) * Timer() / 35;
    if (p_Credits[playernumber()] > 20000)
    {
      p_Credits[playernumber()] = 20000;
    }
    p_Rank[playernumber()] = 0;
    p_Exp_Points[playernumber()] = 0;
    p_Exp[playernumber()] = 0;
    p_KickSlot[playernumber()] = 0;
    p_MechUpgradeWeapons[playernumber()] = 0;
    p_MechUpgradeArmor[playernumber()] = 0;
    p_TankSlot[playernumber()] = 0;
	p_StreakLevel[playernumber()] = 0;
	
    Notify_Player_Enter();
	
	//Save the name for disconnect cases.
	Stats_PlayerNames[playernumber()] = strparam(n:0);
	
    // perform respawn actions
    acs_executealways(54, 0, 0, 0, 0);
}

// player respawns
script 54 RESPAWN
{
	
    // give players the 'player' tid
    thing_changetid(0, 990+PlayerNumber());
    
    // take boomer cannon incase it glitched
    takeinventory("BoomerCannon", 1);
	
	// [Samu] In case of tank past life.
	takeinventory("TankGun", 1);
	takeinventory("TankGunAdvanced", 1);
	
	TakeInventory("BasicArmor", 0xFFFFFFF);
  
    
    // give inventory on respawn
	delay(5);
	ACS_Execute(56,0,p_LastWeap[playernumber()],0,0);
    delay(10);
	// Recharge prometeo protocol.
	if(CheckInventory("PlayUp_Prometeo_Used"))
		takeinventory("PlayUp_Prometeo_Used", 1);
	if(CheckInventory("PlayUp_SpawnShield")) 
		giveinventory("PlayUp_SpawnShield_Activate", 1);
		
    acs_execute(106, 0, 1, 1, 0);
    delay(15);
    //t3hdoom: Originally didn't give any ammo if there's no armory. Let's give them ammo on spawn regardless
    acs_execute(106, 0, 3, 1, 0);
	ACS_NamedExecute("Auto-Use Items", 0);
    p_Streak[playernumber()] = 0; // Reset the kill-streak.
	
}

script "SFPlus_NameUpdate" ENTER {
	// If this boi decides to change the name.
	while(PlayerInGame(PlayerNumber())){
		if(StrCmp(Stats_PlayerNames[Playernumber()], strparam(n:0)) != 0){
			Stats_PlayerNames[Playernumber()] = strparam(n:0);
		}
		delay(1);
	}
}

script 57 (int num) DISCONNECT 
{
	//PrintBold(d:ActivatorTID());
	//PrintBold(d:ACS_ExecuteWithResult(599,0,0,0));
	//PrintBold(d:ThingCountName("TurretHeadBase", 0));
	//PrintBold(d:ThingCountName("TurretFlame_Head", 0));
	
	// Clean things leftovers by player.
	Thing_Damage(990+num, 90000000, MOD_UNKNOWN);
	Thing_Remove(990+num);
	
	Thing_Damage(15000+num, 90000000, MOD_UNKNOWN);
	Thing_Remove(15000+num);
	
	Thing_Damage(30000+num, 90000000, MOD_UNKNOWN);
	Thing_Remove(30000+num);
	// Unfreeze the player, to avoid bugs.
	SetPlayerProperty(0, 0, PROP_TOTALLYFROZEN);
	SetPlayerProperty(0, 0, PROP_FROZEN);
	//log(s:"Last commander: ", n:c_Commander+1);
	if(c_Commander == num){
		SetPlayerProperty(0, 1, PROP_TOTALLYFROZEN);
		SetPlayerProperty(0, 0, PROP_TOTALLYFROZEN);
		// [Samu] Bug: Spectating from commander will cause a freeze on the player.
		Thing_Remove(3568); // Remove the spawn blocker at least.
		c_Commander = 99;
	}
	
	if (Stats_PlayerNames[num] != 0){ // Check if the player has joined to the game at least once.
		 Notify_Player_Leave(Stats_PlayerNames[num]);
	}
	Stats_PlayerNames[num] = 0;
}

script 599 (void)
{
	int count = 0;
	count = count + ThingCountName("TurretBullet_Head", 0);
	count = count + ThingCountName("TurretFlame_Head", 0);
	count = count + ThingCountName("TurretPlasma_Head", 0);
	count = count + ThingCountName("TurretRocket_Head", 0);
	count = count + ThingCountName("TurretTesla_Head", 0);
	SetResultValue(count);
}

script 56 (int weapon) //Set weapon to last (separated this script from the respawn one because it's going to be executed through Decorate too)
{
	if(weapon == 0) weapon = p_LastWeap[playernumber()]; //If executed from Decorate

	Weapon_LoadLastUsed(weapon);

}




script 249 OPEN
{
	delay(35*3);
	
	// make sure it is not a commander gametype
	if (f_UseScoreSystem == 1){
		int l_CurrentLevel;
		while(1){
			// display
			setfont("CONFONT");
			sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
			hudmessage(s:"Team score: ",d:getlevelinfo(LEVELINFO_KILLED_MONSTERS); 1, 256, CR_TAN, 400.0, 20.1, 7.0);
			
			
			
			// upgrade level 1
			if (l_CurrentLevel == 0 && getlevelinfo(LEVELINFO_KILLED_MONSTERS) > 100){
				l_CurrentLevel ++;
				Tech_Set(FP_TECH_GENLAB_HEALTH1, FP_TECHF_DONE);
				f_TipShow ("CM12", "Human Engineering Phase 1", "Has been rewarded to your team!\nHealth increased", 1);
			}
			
			
			
			// upgrade level 2
			if (l_CurrentLevel == 1 && getlevelinfo(LEVELINFO_KILLED_MONSTERS) > 450){
				l_CurrentLevel ++;
				Tech_Set(FP_TECH_GENLAB_ARMOR, FP_TECHF_DONE);
				f_TipShow ("CM16", "Steel Plating", "Has been rewarded to your team!\nArmor provided", 1);
			}
			
			
			
			// upgrade level 3
			if (l_CurrentLevel == 2 && getlevelinfo(LEVELINFO_KILLED_MONSTERS) > 800){
				l_CurrentLevel ++;
				Tech_Set(FP_TECH_ARMORY_AMMOBP, FP_TECHF_DONE);
				f_TipShow ("CM29", "Ammo Backpack", "Has been rewarded to your team!\nDouble ammo capacity", 1);
			}
			
			
			
			// upgrade level 4
			if (l_CurrentLevel == 3 && getlevelinfo(LEVELINFO_KILLED_MONSTERS) > 1050){
				l_CurrentLevel ++;
				Tech_Set(FP_TECH_ARMORY_BOOMRN, FP_TECHF_DONE);
				f_TipShow ("CM28", "Boomshot Rounds", "Has been rewarded to your team!\nIncreased weapon damage", 1);
			}
			
			
			
			// upgrade level 5
			if (l_CurrentLevel == 4 && getlevelinfo(LEVELINFO_KILLED_MONSTERS) > 1500){
				l_CurrentLevel ++;
				Tech_Set(FP_TECH_GENLAB_HEALTH2, FP_TECHF_DONE);
				f_TipShow ("CM13", "Human Engineering Phase 2", "Has been rewarded to your team!\nHealth increased", 1);
			}
			
			
			
			// upgrade level 6
			if (l_CurrentLevel == 5 && getlevelinfo(LEVELINFO_KILLED_MONSTERS) > 2300){
				l_CurrentLevel ++;
				Tech_Set(FP_TECH_REFINE_PUMP1, FP_TECHF_DONE);
				
				f_TipShow ("CM56", "Processing Phase 1", "Has been rewarded to your team!\nCredit bonus", 1);
			}
			
			
			
			// upgrade level 7
			if (l_CurrentLevel == 6 && getlevelinfo(LEVELINFO_KILLED_MONSTERS) > 3800){
				l_CurrentLevel ++;
				
				Tech_Set(FP_TECH_GENLAB_RESISB, FP_TECHF_DONE);
				
				f_TipShow ("CM17", "Resister Unit", "Has been rewarded to your team!\nDamage Resistance", 1);
			}
			
			
			
			// upgrade level 8
			if (l_CurrentLevel == 7 && getlevelinfo(LEVELINFO_KILLED_MONSTERS) > 4500){
				l_CurrentLevel ++;
				
				Tech_Set(FP_TECH_GENLAB_REGENB, FP_TECHF_DONE);
				
				f_TipShow ("CM18", "Asorber Unit", "Has been rewarded to your team!\nHealth regeneration", 1);
			}
			
			
			
			// upgrade level 9
			if (l_CurrentLevel == 8 && getlevelinfo(LEVELINFO_KILLED_MONSTERS) > 5000){
				l_CurrentLevel ++;
				Tech_Set(FP_TECH_REFINE_PUMP2, FP_TECHF_DONE);
				
				f_TipShow ("CM56", "Processing Phase 2", "Has been rewarded to your team!\nCredit bonus", 1);
				break;
			}
			delay(35*5);
		}
	}
}


// remove if wrong gametype
script 769 (void){
	SetResultValue(f_Gametype);
}

// [Samu] Check if i am on a tank.
script 781 (void){
	SetResultValue(checkinventory("GotTank") || ((CheckInventory("TankGun") || CheckInventory("TankGunAdvanced")) && p_TankSlot[playernumber()] == 2));
}

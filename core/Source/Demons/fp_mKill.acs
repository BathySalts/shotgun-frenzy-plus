
#library "fp_mKill"

#import "f_IntDB.acs"
#import "f_cred.acs"
#import "fl_techs.acs"

#include "zcommon.acs"
#include "samu_tools.acs"

Script "SFPlus_MonsterKill" Kill{
	delay(1); // Let the monsters set their flags in the decorate.
	
	if(CheckFlag(0, "ISMONSTER") && !CheckFlag(0, "FRIENDLY")){
	  bool flag_boss = checkinventory("FPMToken_Boss");
	  bool flag_hard = checkinventory("FPMToken_Hard");
	  bool flag_frozen = checkinventory("FPMToken_Frozen");
	  bool flag_gibbed = checkinventory("FPMToken_Gibbed");
	  bool flag_NoCount = checkinventory("FPMToken_NoCount");
		 // monster class
	  int monsterClass = sf_GetMonsterClass_Health();
	  int splat = flag_gibbed;
	  int noprofit = 0;
	  int montype;
	  if	 (flag_boss) montype = 2;
	  else if(flag_hard) montype = 1;

	 // drop reward item
	 int howMuch = p_MonsterCredits[monsterClass] + playercount();
	 int splatbonus = howmuch/2;
	 if(splat > 0)	howMuch += splatBonus;
	 p_dropItem(monsterClass);
		//debugTidPointers (0);
		//debugTidPointersStrings(0);
	  // give credits and xp
	 SetActivatorToTarget(0);
		//if ((ClassifyActor(0) & ACTOR_Monster)) Print(s:"I am a monster.");
		//print(d:noProfit);
	if(noProfit){
		p_monsterKilled(monsterClass, splat, true, false);
	}else{
		if(splat > 0) p_monsterKilled(monsterClass, splat, false, montype);
		else if(ActivatorTID() >= 10000 && CheckActorClass(ActivatorTID(), "sf_SawDrone")){
			//[Samu] My try to give you the half of amount if a saw drone kills a monster.
			//The math is simple.
			//1/00/00
			//Type of Drone/Player number/Number Of Drone
			
			// I'll hope to do not encounter a player spamming to 100 and more drones.
			int owner = ((ActivatorTID() / 100) % 100);
			//log(s:"Died by a saw drone. With tid: ", d:ActivatorTid(), s:" Owned by: ", n:owner+1,s:" ", d:owner); 
			// Attempting to retrive the owner of this drone.
			
			setActivatorToPlayer(owner);
			
			ACS_NamedExecuteAlways("SF_CreditAddDisplaySmall", 0,howMuch/2, CR_Blue);
			p_monsterKilled_Drone(monsterClass);
		}
		else 		 p_monsterKilled(monsterClass, splat, false, montype);
		
		}
	}
}
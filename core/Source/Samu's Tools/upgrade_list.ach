
// Weapon needed, Weapon upgrades and the cost

#Define WEP_Amount 15

#Define WEP_BERETTA 0
#Define WEP_BOOMSTICK 1
#Define WEP_SSG 2
#Define WEP_QUADSHOT 3
#Define WEP_SPITTER 4
#Define WEP_BUCKSHOT 5
#Define WEP_REPEATER 6
#Define WEP_DUALSHOT 7
#Define WEP_LAUNCHER 8
#Define WEP_FLINGER 9
#Define WEP_PLASMAGUN 10
#Define WEP_RAILGUN 11
#Define WEP_FLAMER 12
#Define WEP_BFG 13
#Define WEP_SUPPLIER 14
// Upgrade 1 or upgrade 2?

#Define WepUpName 0
#Define WepUpCost 1
#Define WepUpDesc 2
#Define WepUpSell 3

#Define UpgProps 4
#Define UpgTypes 3

int WepArray[WEP_Amount][UpgTypes][UpgProps];

function void InitUpgWepList(void){
	int wid;
	
	wid = WEP_BERETTA;
	initWeaponUpgrades(wid, 
		"Beretta", 
		"Beretta_Dual", 0, "",
		"Beretta_SMG", 0 ,""
		);
	initRecyclePrices(wid, -1, -1, -1); // No Recycleable.
	
	wid = WEP_BOOMSTICK;
	initWeaponUpgrade(wid, 
		"Boomstick", 
		"Boomstick_Full", 1 ,"Explosive shells + C.Bayonetta"
	);
	initRecyclePrices(wid, -1, -1, -1);
	
	wid = WEP_SSG;
	initWeaponUpgrades(wid, 
		"SSG", 
		"SSG_Autoload", 1, "Autoloading Refire \n+Kickback",
		"SSG_Explosive", 1 ,"Exploding Shells \n+Damage"
	);
	initRecyclePrices(wid, 
		"pr_wr_ssg",
		"pr_wr_ssg_up1",
		"pr_wr_ssg_up2"
		);
	
	wid = WEP_QUADSHOT;
	initWeaponUpgrade(wid, 
		"Quadshot",
		"Quadshot_Full", 2 ,"Explosive shells + C. Bayonetta"
	);
	
	initRecyclePrices(wid, 
		"pr_wr_quadshot",
		"pr_wr_quadshot_up0",
		"pr_wr_quadshot_up0"
		);
	
	wid = WEP_SPITTER;
	initWeaponUpgrades(wid, 
		"Spitter",
		"Spitter_SSG", 1, "Shell grenades \n+Spread",
		"Spitter_GLauncher", 1 ,"Nerve-gas Grenades \n+Speed"
	);
	initRecyclePrices(wid, 
		"pr_wr_spitter",
		"pr_wr_spitter_up1",
		"pr_wr_spitter_up2"
	);
	
	wid = WEP_BUCKSHOT;
	initWeaponUpgrades(wid,
		"Buckshot",
		"Buckshot_Chamber", 1, "Chamber Expansion \n+R. Speed",
		"Buckshot_Explosive", 2, "Exploding Shells \n+R. Speed"
	);
	initRecyclePrices(wid, 
		"pr_wr_buckshot",
		"pr_wr_buckshot_up1",
		"pr_wr_buckshot_up2"
	);
		
	wid = WEP_REPEATER;
	initWeaponUpgrades(wid, 
		"Repeater",
		"Repeater_DoubleSpeed", 1, "Speed buster \n+F. Ratio",
		"Repeater_BlastShells", 2, "Plasma blaster \n+Damage"
	);
	initRecyclePrices(wid, 
		"pr_wr_repeater",
		"pr_wr_repeater_up1",
		"pr_wr_repeater_up2"
	);
	
	wid = WEP_DUALSHOT;
	initWeaponUpgrade(wid, 
		"DualShot",
		"DualShot_Razor", 2, "Razorblade thrower \n+Ripper"
	);
	initRecyclePrices(wid, 
		"pr_wr_dualshot",
		"pr_wr_dualshot_up0",
		"pr_wr_dualshot_up0"
		);
		
	wid = WEP_LAUNCHER;
	initWeaponUpgrades(wid, 
		"Launcher",
		"Launcher_Exploder", 1, "Trail Exploder \n+Damage",
		"Launcher_Multi", 2, "Multi Rockets \n+Spread"
	);
	initRecyclePrices(wid, 
		"pr_wr_launcher",
		"pr_wr_launcher_up1",
		"pr_wr_launcher_up2"
	);

	wid = WEP_FLINGER;
	initWeaponUpgrades(wid, 
		"Flinger",
		"Flinger_Expander", 2, "Cluster Expander \n+Spread",
		"Flinger_MinePlacer", 1, "Toxic Gas Launcher \n+Speed"
	);
	initRecyclePrices(wid, 
		"pr_wr_flinger",
		"pr_wr_flinger_up1",
		"pr_wr_flinger_up2"
	);
		
	wid = WEP_PLASMAGUN;
	initWeaponUpgrades(wid, 
		"Plasmagun", 
		"Plasmagun_Advanced", 2, "Plasma Enhancer \n+Damage",
		"Plasmagun_Spread", 1, "Spreader Chip \n+Spread"
	);
	initRecyclePrices(wid, 
		"pr_wr_plasmagun",
		"pr_wr_plasmagun_up1",
		"pr_wr_plasmagun_up2"
	);
	
	wid = WEP_RAILGUN;
	initWeaponUpgrades(wid, 
		"SF_Railgun",
		"Railgun_Slug", 1, "Rail Slugger \n+Rail",
		"Railgun_Taser", 2, "Plasma Taser \n+Damage"
	);
	initRecyclePrices(wid, 
		"pr_wr_railgun",
		"pr_wr_railgun_up1",
		"pr_wr_railgun_up2"
	);
		
	wid = WEP_FLAMER;
	initWeaponUpgrade(wid, 
		"Flamer",
		"FlamerS", 2, "Penetration \n +Ripper"
		);
	initRecyclePrices(wid, 
		"pr_wr_flamer",
		"pr_wr_flamer_up0",
		"pr_wr_flamer_up0"
		);
		
	wid = WEP_BFG;
	initWeaponUpgrade(wid, 
		"BFG",
		"BFGS", 4, "Exploder chip\n +Ripper"
		);
	initRecyclePrices(wid, 
		"pr_wr_bfg",
		"pr_wr_bfg_up0",
		"pr_wr_bfg_up0"
		);
	
	wid = WEP_SUPPLIER;
	initWeaponUpgrade(wid, 
		"Supplier",
		"Supplier_Big", 1, "Spreadier Placement\n +Supplies"
		);
	initRecyclePrices(wid, 
		"pr_wr_supplier",
		"pr_wr_supplier_up0",
		"pr_wr_supplier_up0"
		);
	
	
}

function void initWeaponUpgrades(int wep_num, str UPBasis, str UP1name, int UP1cost, str UP1desc, str UP2name, int UP2cost, str UP2desc){
	setWeaponBasic(wep_num, UPBasis);
	setWeaponUpgrade(wep_num, 1, UP1name, UP1cost, UP1desc);
	setWeaponUpgrade(wep_num, 2, UP2name, UP2cost, UP2desc);
}

function void initWeaponUpgrade(int wep_num, str UPBasis, str UPname, int UPcost, str UPdesc){
	setWeaponBasic(wep_num, UPBasis);
	initWeaponUpgrades(wep_num, UPBasis, UPname, UPcost, UPdesc, "", -1, "No Upgrade");
}

function void initRecyclePrices(int wep_num, str sellB, str sell1, str sell2){
	WepArray[wep_num][0][WepUpSell] = sellB;
	WepArray[wep_num][1][WepUpSell] = sell1;
	WepArray[wep_num][2][WepUpSell] = sell2;
}

function void setWeaponBasic(int wep_num, str weaponBasic){
	setWeaponUpgrade(wep_num,0, weaponBasic, 0, "Okay");
}

function void setWeaponUpgrade(int wep_num, int up_type, str upgradeWeapon, int costUp, str desc){
	WepArray[wep_num][up_type][WepUpName] = upgradeWeapon;
	WepArray[wep_num][up_type][WepUpCost] = costUP;
	WepArray[wep_num][up_type][WepUpDesc] = desc;
}

function int getWeaponUp1Cost(int which){
	return WepArray[which][1][WepUpCost];
}

function str getWeaponUp1Name(int which){
	return WepArray[which][1][WepUpName];
}

function str getWeaponUp1Desc(int which){
	return WepArray[which][1][WepUpDesc];
}

function int getWeaponUp2Cost(int which){
	return WepArray[which][2][WepUpCost];
}

function str getWeaponUp2Name(int which){
	return WepArray[which][2][WepUpName];
}

function str getWeaponUp2Desc(int which){
	return WepArray[which][2][WepUpDesc];
}

function int getWeaponUp2Sell(int which){
	return CheckInventory(WepArray[which][2][WepUpSell]);
}

function int getWeaponUp1Sell(int which){
	return CheckInventory(WepArray[which][1][WepUpSell]);
}

function str getWeaponBasis(int which){
	return WepArray[which][0][WepUpName];
}

function int getWeaponBasisSell(int which){
	return CheckInventory(WepArray[which][0][WepUpSell]);
}

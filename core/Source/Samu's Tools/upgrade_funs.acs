
function int getUpgradeCost(int which, int upgradeType){
	int resp = 0;
	
	if(upgradeType == 1){
		resp = getWeaponUp1Cost(which);
	}
	else if (upgradeType == 2){
		resp = getWeaponUp2Cost(which);
	}
	
	return resp;
}

function int CheckBasicWeapon(int wid){
	return checkinventory(getWeaponBasis(wid));
}

function void SwapWeapon(str this, str withThis){
	TakeInventory(this,1);
	GiveInventory(withThis,1);
	setWeapon(withThis);
}

function bool CanIUpgrade(int Wid){
	return 
		checkinventory(getWeaponBasis(wid)) && 
		!checkinventory(getWeaponUp1Name(wid) || checkinventory(getWeaponUp2Name(wid)));
}

function void UpgradeWeapon(int wid, int type){
	if(type == 1)
		SwapWeapon(getWeaponBasis(wid),getWeaponUP1Name(wid));
	else if( type == 2) 
		SwapWeapon(getWeaponBasis(wid),getWeaponUP2Name(wid));
}

/*
function int fetchCost(int which, int upgradeType){
	//log(s:"Sax");
	int resp = 0;
	for(int i = 0; i < N_UPS; i++){
		if(upgradeList[i][WEPN] == which && upgradeList[i][UPGR] == upgradeType){
			resp = upgradeList[i][COST]; break;
			}
	}
	//log(d:resp);
	return resp;
}



function void UpgradeWeapon(int which, int type){
	if(type == UP1)
		SwapWeapon(upgradeStr[which][UP0],upgradeStr[which][UP1]);
		
	else SwapWeapon(upgradeStr[which][UP0],upgradeStr[which][UP2]);
}

function bool CanIUpgrade(int Wid){
	return 
		checkinventory(upgradeStr[Wid][UP0]) && 
		!checkinventory(upgradeStr[Wid][UP1] || checkinventory(upgradeStr[Wid][UP2]));
}
*/
#library "samuterm"

// Includes:
#include "zcommon.acs"

#define ACSUTILS_RECTLIB_USERVARS 10 // user defined

//////SF Stuff////////
#import "f_IntDB.acs"
#import "fl_Price.acs"

#include "acsutils.acs"
#include "samu_tools.acs"
#include "acsrect.acs"
//////SF Stuff////////

#include "samut_vars.acs"
#include "samut_utils.acs"

#include "samut_cards.acs"
#include "samut_grids.acs"
#include "samut_parse.acs"
#include "samut_comps.acs"
#include "samut_exes.acs"
#include "samut_input.acs"
#include "samut_update.acs"
#include "samut_disp.acs"

Script "SamuTerminal" (int homeTag){
	if(TerminalInUse()) Terminate;
	SamuTerm_Execute(STEXE_OPEN, homeTag, 0, 0);
	SetInventory("SamuTInv_ActionKey", 0);
	
}	

script "TerminalLoop" (int alphatag) CLIENTSIDE {
	//Here is where the magic begins!
	if(IsClient() && consolePlayerNumber() == playerNumber()){
	
	pagetags[STTAGS_ALPHA] = alphatag;
	if(pagetags[STTAGS_ALPHA] == 20) SamuTerm_SetBack("BGR");
	else if(pagetags[STTAGS_ALPHA] == 10) SamuTerm_SetBack("");
	
	//Sync it with client.
	SamuTerm_InitStrings();
	// To Sync the prices.
	ACS_NamedExecuteAlways("SFPlus_DefinePrices", 0);
	
	SamuTerm_InitComps();
	SamuTerm_GreetPlayer(playerNumber());
	LocalAmbientSound("SamuTerm/LogIn", 127);
	PlaySound(1000+playernumber(),"SamuTerm/Idle", CHAN_BODY,1.0,true);
		while(TerminalInUse())
		{
			SamuTerm_Update();
			SamuTerm_Input(playerNumber());
			SamuTerm_Display();
			
			debug();
			Delay(1);
		}
	CenterCursor();
	SamuTerm_ResetBack();
	if(exitResult != -1){
		SamuTerm_DimissPlayer(playerNumber());
		LocalAmbientSound("SamuTerm/Back", 127);
	}
	StopSound(0,CHAN_BODY); 
	Delay(5);
	NamedRequestScriptPuke("SamuTerm_FreePlayer", ConsolePlayerNumber());
	}
}

Script "SamuTerm_VariableSync" ENTER{
	while(1){
		SetInventory("p_Money", p_credits[playernumber()]);
		SetInventory("p_UpPoint", p_Exp_points[playernumber()]);
		
		SyncAllShopPrices();
		SyncTechs();
		SyncAllMechaPrices();
		SyncAllCMDPrices();
		
		delay(1);
	}
}

function void debug(void){
	HudPushState();
    HudResetState();
		HudSetTimes();
		HudSetPoint(320.0, 460.0);
		str msg = strParam(s:"x: ", f:CursorX(), s:",y: ",f:CursorY());
		HUDDrawText(40,msg);
    HudPopState();
	
}

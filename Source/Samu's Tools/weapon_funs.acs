
function bool IsHoldingWeaponSameKind(int asThis){
	return 
		checkweapon(getWeaponBasis(asThis)) ||
		checkweapon(getWeaponUP1Name(asThis)) ||
		checkWeapon(getWeaponUP2Name(asThis));
}

function bool GotWeaponSameKind(int asThis){
	return 
		checkinventory(getWeaponBasis(asThis)) ||
		checkinventory(getWeaponUP1Name(asThis)) ||
		checkinventory(getWeaponUP2Name(asThis));
}
//

function void SetYourLastWeapon(int which){

	log(s:"Weapon style load: ", s:GetWeaponBasis(which));
	SetWeapon(getWeaponBasis(which)); 
	SetWeapon(getWeaponUP1Name(which));
	SetWeapon(getWeaponUP2Name(which));
	// Always aiming to the last updated.
}

//
function void GiveWeapons(str wep1, str wep2, str setWep){
	SetActivatorToPlayer(PlayerNumber());
	giveinventory(getWeaponBasis(wep1), 1);
	giveinventory(getWeaponBasis(wep2), 1);
	setweapon(getWeaponBasis(setWep));
}


#Define WP_SHOTGUN 1
#Define WP_ASSAULT 2
#Define WP_SUPPORT 3
#Define WP_COMANDO 4
#Define WP_HEAVY 5
#Define WP_PLASMA 6
#Define WP_FLAMER 7
#Define WP_BFG 8

function int saveLastWeapon(void){
	int res = -1;
	for(int i = 0; i < Wep_Amount; i++){
		if(IsHoldingWeaponSameKind(i)){
			res = i;
			break;
		}
	}
	log(s:"Weapon style save: ", s:GetWeaponBasis(res));
	return res;
}

function void GiveWeaponPack(int which){
	switch(which){
		case WP_SHOTGUN:
			GiveWeapons(WEP_SSG, WEP_QUADSHOT, WEP_SSG);
			g_AID_WepTracker[0]++; // To make the game more harder.
		break;
		
		case WP_SUPPORT:
			GiveWeapons(WEP_SUPPLIER, WEP_SUPPLIER, WEP_SUPPLIER);
			
		break;
		
		case WP_ASSAULT:
			GiveWeapons(WEP_SPITTER, WEP_BUCKSHOT, WEP_SPITTER);
			//Start with ammo, instead of emptyness for the buckyshot.
			GiveInventory("Buckshot_LoadedShells", 10);
			g_AID_WepTracker[1]++; // To make the game more harder.
		break;
		
		case WP_COMANDO:
			GiveWeapons(WEP_REPEATER, WEP_DUALSHOT, WEP_REPEATER);
			g_AID_WepTracker[2]++; // To make the game more harder.
		break;
		
		case WP_HEAVY:
			GiveWeapons(WEP_LAUNCHER, WEP_FLINGER, WEP_LAUNCHER);
			g_AID_WepTracker[3]++; // To make the game more harder.
		break;
		
		case WP_PLASMA:
			GiveWeapons(WEP_PLASMAGUN, WEP_RAILGUN, WEP_PLASMAGUN);
			g_AID_WepTracker[4]++; // To make the game more harder.
		break;
		
		case WP_FLAMER:
			GiveWeapons(WEP_FLAMER, WEP_FLAMER, WEP_FLAMER);
			g_AID_WepTracker[5]++; // To make the game more harder.
		break;
		
		case WP_BFG:
			GiveWeapons(WEP_BFG, WEP_BFG, WEP_BFG);
			g_AID_WepTracker[6]++; // To make the game more harder.
		break;
	}
}

function bool GotWPAlready(int which){
	bool res = 0;
	switch(which){
		case WP_SHOTGUN: 
			res = GotWeaponSameKind(WEP_SSG) || GotWeaponSameKind(WEP_QUADSHOT);
			break;
		case WP_SUPPORT: 
			res = GotWeaponSameKind(WEP_SUPPLIER);
			break;
		case WP_ASSAULT: 
			res = GotWeaponSameKind(WEP_SPITTER) || GotWeaponSameKind(WEP_BUCKSHOT);
			break;
		case WP_COMANDO:
			res = GotWeaponSameKind(WEP_REPEATER) || GotWeaponSameKind(WEP_DUALSHOT);
			break;
		case WP_HEAVY: 
			res = GotWeaponSameKind(WEP_LAUNCHER) || GotWeaponSameKind(WEP_FLINGER);
			break;
		case WP_PLASMA: 
			res = GotWeaponSameKind(WEP_PLASMAGUN) || GotWeaponSameKind(WEP_RAILGUN);
			break;
		case WP_FLAMER: 
			res = GotWeaponSameKind(WEP_FLAMER);
			break;
		case WP_BFG:
			res = GotWeaponSameKind(WEP_BFG);
			break;
	}
	return res;
}